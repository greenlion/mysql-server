#
# run_refresh_stream.sh: run refresh stream
#
# This file is released under the terms of the Artistic License.  Please see
# the file LICENSE, included in this package, for details.
#
# Copyright (C) 2003 Open Source Development Lab, Inc.
#
# Author: Jenny Zhang
#
#!/bin/sh

if [ $# -ne 3 ]; then
        echo "Usage: ./run_refresh_stream.sh <scale_factor> <stream_num> <perf_run_number>" 
        exit
fi

scale_factor=$1
stream_num=$2
perf_run_num=$3
GTIME="@TOPDIR@/dbdriver/utils/gtime"
dbdriver_sapdb_path="@TOPDIR@/dbdriver/scripts/sapdb"

echo "`date`:=======refresh stream $stream_num========"

s_time_stream=`$GTIME`
echo "sql_execute insert into time_statistics (task_name, s_time, int_time) values ('PERF${perf_run_num}.THRUPUT.RFST${stream_num}', timestamp, $s_time_stream)"
dbmcli -d $SID -u dbm,dbm -uSQL $DBUSER,$DBUSER "sql_execute insert into time_statistics (task_name, s_time, int_time) values ('PERF${perf_run_num}.THRUPUT.RFST${stream_num}', timestamp, $s_time_stream)"

echo "`date`: start throughput test refresh stream $stream_num rf1"
s_time=`$GTIME`
echo "sql_execute insert into time_statistics (task_name, s_time, int_time) values ('PERF${perf_run_num}.THRUPUT.RFST${stream_num}.RF1', timestamp, $s_time)"
dbmcli -d $SID -u dbm,dbm -uSQL $DBUSER,$DBUSER "sql_execute insert into time_statistics (task_name, s_time, int_time) values ('PERF${perf_run_num}.THRUPUT.RFST${stream_num}.RF1', timestamp, $s_time)"
$dbdriver_sapdb_path/run_rf1.sh $scale_factor 
echo "sql_execute update time_statistics set e_time=timestamp where task_name='PERF${perf_run_num}.THRUPUT.RFST${stream_num}.RF1' and int_time=$s_time"
dbmcli -d $SID -u dbm,dbm -uSQL $DBUSER,$DBUSER "sql_execute update time_statistics set e_time=timestamp where task_name='PERF${perf_run_num}.THRUPUT.RFST${stream_num}.RF1' and int_time=$s_time"
e_time=`$GTIME`
echo "`date`: end throughput test refresh stream $i rf1"
let "diff_time=$e_time-$s_time"
echo "elapsed time for throughput test refresh stream $i rf1 $diff_time"

echo "`date`: start throughput test refresh stream $i rf2"
s_time=`$GTIME`
echo "sql_execute insert into time_statistics (task_name, s_time, int_time) values ('PERF${perf_run_num}.THRUPUT.RFST${stream_num}.RF2', timestamp, $s_time)"
dbmcli -d $SID -u dbm,dbm -uSQL $DBUSER,$DBUSER "sql_execute insert into time_statistics (task_name, s_time, int_time) values ('PERF${perf_run_num}.THRUPUT.RFST${stream_num}.RF2', timestamp, $s_time)"
$dbdriver_sapdb_path/run_rf2.sh 
echo "sql_execute update time_statistics set e_time=timestamp where task_name='PERF${perf_run_num}.THRUPUT.RFST${stream_num}.RF2' and int_time=$s_time"
dbmcli -d $SID -u dbm,dbm -uSQL $DBUSER,$DBUSER "sql_execute update time_statistics set e_time=timestamp where task_name='PERF${perf_run_num}.THRUPUT.RFST${stream_num}.RF2' and int_time=$s_time"
e_time=`$GTIME`
echo "`date`: end throughput test refresh stream $i rf2"
let "diff_time=$e_time-$s_time"
echo "elapsed time for throughput test refresh stream $i rf2 $diff_time"

echo "sql_execute update time_statistics set e_time=timestamp where task_name='PERF${perf_run_num}.THRUPUT.RFST${stream_num}' and int_time=$s_time_stream"
dbmcli -d $SID -u dbm,dbm -uSQL $DBUSER,$DBUSER "sql_execute update time_statistics set e_time=timestamp where task_name='PERF${perf_run_num}.THRUPUT.RFST${stream_num}' and int_time=$s_time_stream"
e_time_stream=`$GTIME`
let "diff_time=$e_time_stream-$s_time_stream"
echo "elapsed time for throughput test refresh stream $i $diff_time"
